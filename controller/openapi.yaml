openapi: 3.0.2
info:
  title: RIK - Controller API
  version: 0.1.0
paths:
  /api/v0/workloads.list:
    get:
      tags:
        - Workloads
      description: List all workloads
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  workloads:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workload'
  /api/v0/workloads.instances/{workloadId}:
    get:
      parameters:
        - name: workloadId
          in: path
          required: true
          schema:
            type: string
            example: "28dcac69-33ef-4b13-a42f-0d07c7acc1a6"
      tags:
        - Workloads
      description: Get instances related to a specific workload
      responses:
        '200':
          description: Workload has been found and it has instances
          content:
            application/json:
              schema:
                type: object
                properties:
                  instances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Instance'
        '204':
          description: Workload has been found but it has no instances
        '404':
          description: Workload has not been found
        '400':
          description: Workload ID is not provided
  /api/v0/workloads.create:
    post:
      tags:
        - Workloads
      description: Create a new workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadDefinition'
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WorkloadName'
  /api/v0/workloads.delete:
    post:
      tags:
        - Workloads
      description: Delete a workload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadName'
            
      responses:
        '200':
          description: Successful Response
  /api/v0/tenants.list:
    get:
      tags:
        - Tenants
      description: List all tenants
      parameters:
        - required: false
          schema:
            title: limit
            minimum: 1
            type: integer
          name: limit
          in: query
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: object
                properties:
                  tenants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
  /api/v0/tenants.create:
    post:
      tags:
        - Tenants
      description: Create a new tenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantDefinition'
      responses:
        '200':
          description: Successful Response
  /api/v0/tenants.delete:
    post:
      tags:
        - Tenants
      description: Delete a tenant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "28dcac69-33ef-4b13-a42f-0d07c7acc1a6"
      responses:
        '200':
          description: Successful Response
  /api/v0/instances.list:
    get:
      tags:
        - Instances
      description: List all instances
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: object
                properties:
                  instances:
                    type: array
                    items:
                      $ref: '#/components/schemas/Instance'
          
  /api/v0/instances.create:
    post:
      tags:
        - Instances
      description: Create a new instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstanceDefinition'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  instances:
                    type: array
                    items:
                      $ref: '#/components/schemas/InstanceCreationInformation'
  /api/v0/instances.delete:
    post:
      tags:
        - Instances
      description: Delete an instance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "28dcac69-33ef-4b13-a42f-0d07c7acc1a6"
      responses:
        '200':
          description: Successful Response
        
components:
  schemas:
  
    Tenant:   
      type: object
      properties:
        id:
          type: string
          example: "f13563b8-8a0b-4867-81f7-6890d6fe9fcd"
        name:
          type: string
          example: <name>
        verb:
          type: string
          example: create
        resource:
          type: string
          example: workload
    
    TenantDefinition:   
      type: object
      properties:
        name:
          type: string
          example: <name>
        verb:
          type: string
          example: create
        resource:
          type: string
          example: workload


    ContainerWorkloadDefinition:
      type: object
      properties:
        containers:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: <name>
              image:
                type: string
                example: <image>
              env:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: key1
                    value:
                      type: string
                      example: value1
              network:
                type: object
                properties:
                  port:
                    type: number
                    example: 80
                  targetPort:
                    type: number
                    example: 80
                  protocol:
                    type: string
                    example: TCP
                  type:
                    type: string
                    example: clusterIP|nodePort|loadBalancer

    FunctionWorkloadDefinition:
      type: object
      description: A definition for a Function, no network is required as it's handled by the underlying platform
      properties:
        function:
          type: object
          properties:
            execution:
              type: object
              properties:
                rootfs:
                  type: string
                  example: https://s3.amazonaws.com/spec.ccfc.min/img/quickstart_guide/aarch64/rootfs/bionic.rootfs.ext4

    WorkloadDefinition:
      type: object
      properties:
        apiVersion:
          type: string
          enum:
            - v1
        kind:
          type: string
          description: Determine the kind of object you want to create
          enum:
            - Pod
            - Function
        name:
          type: string
          example: Name of the object
        spec:
          type: object
          oneOf:
            - $ref: '#/components/schemas/ContainerWorkloadDefinition'
            - $ref: '#/components/schemas/FunctionWorkloadDefinition'

    Workload:
      type: object
      properties:
        id:
          type: string
          example: "c540eaf0-e41b-4de8-bbda-d1c815443b6e"
        apiVersion:
          type: string
          example: "v1"
        kind:
          $ref: '#/components/schemas/WorkloadDefinition/properties/kind'
        name:
          type: string
          example: workload name
        spec:
          type: object
          properties:
            containers:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: <name>
                  image:
                    type: string
                    example: <image>
                  env:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: key1
                        value:
                          type: string
                          example: value1
                  ports:
                    type: object
                    properties:
                      port:
                        type: number
                        example: 80
                      targetPort:
                        type: number
                        example: 80
                      protocol:
                        type: string
                        example: TCP
                      type:
                        type: string
                        example: clusterIP|nodePort|loadBalancer
                  
                  
    WorkloadName:
      type: object
      properties:
        id:
          type: string
          example: "c346030b-aa9e-45a9-85eb-ec38d51dfa44"
        name:
          type: string
          example: "<workload name>"

    RikletDefinition:
      type: object
      properties:
        hostname:
          type: string
          example: "riklet-node-1"
        internal_ip:
          type: string
          example: "10.110.0.13"

    InstanceDefinition: 
      type: object
      required:
        - name
        - workload_id
      properties:
        name:
          type: string
          example: "cobra-citer-1923"
        workload_id:
          type: string
          example: "c63f1351-d371-4700-81a4-ac97359bf5a3"
        replicas:
          type: integer
          example: 3
    
    Instance:
      type: object
      properties:
        id:
          type: string
          example: "c346030b-aa9e-45a9-85eb-ec38d51dfa44"
        name:
          type: string
          example: "instance name"
        workload:
          type: string
          example: "workload name"
        location:
          $ref: '#/components/schemas/RikletDefinition'
        status:
          type: integer
          example: "<status>"
    

          
          
          
          
          
          